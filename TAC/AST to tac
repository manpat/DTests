AST to tac

iterativePostorder(node)
  parentStack = empty stack  
  lastnodevisited = null 
  while (not parentStack.isEmpty() or node ≠ null)
    if (node ≠ null)
      parentStack.push(node)
      node = node.left
    else
      peeknode = parentStack.peek()
      if (peeknode.right ≠ null and lastnodevisited ≠ peeknode.right) 
        /* if right child exists AND traversing node from left child, move right */
        node = peeknode.right
      else
        visit(peeknode)
        lastnodevisited = parentStack.pop() 


id = 1 * 2 + 3 * 4

(assign 
  (id) 
  (+ 
    (* 1 2) 
    (* 3 4)))

t0 = 1 * 2
t1 = 3 * 4
t2 = t0 + t1
id = t2

